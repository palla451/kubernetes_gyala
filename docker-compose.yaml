services:
  proxy:
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "512M"
        reservations:
          cpus: "0.5"
          memory: "256M"
    container_name: proxy-app
    image: nginx:latest
    restart: on-failure:2
    volumes:
      - ./logs/proxy/:/var/log/nginx/
      - ./nginx/proxy-app/:/etc/nginx/conf.d/
    depends_on:
      - nginx
    ports:
      - "80:80"
      - "8181:3000"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3

    networks:
      - external-network  # Rete condivisa con il mondo esterno
      - internal-network  # Rete per comunicare con i container interni

  nginx:
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "512M"
        reservations:
          cpus: "0.5"
          memory: "256M"
    container_name: nginx-app
    image: nginx:latest
    restart: on-failure:2
    volumes:
      - ./logs/nginx/:/var/log/nginx/
      - ./nginx/nginx-app/conf.d/:/etc/nginx/conf.d/
      - ./nginx/nginx-app/fastcgi.conf/:/etc/nginx/fastcgi.conf
    depends_on:
      - backend
      - frontend
    ports:
      - "8080:80"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - internal-network  # Solo rete interna

  backend:
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "512M"
        reservations:
          cpus: "0.5"
          memory: "256M"
    container_name: backend-app
    depends_on:
      - database
    restart: on-failure:2
    build:
      context: ./www
      dockerfile: ../Dockerfile.backend
    volumes:
      - ./www/backend:/var/www/backend
    ports:
      - "9000"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - APP_DEBUG=true
      - LOG_LEVEL=debug
    networks:
      - internal-network  # Solo rete interna
      - external-network  # Rete condivisa con il mondo esterno

  frontend:
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "512M"
        reservations:
          cpus: "0.5"
          memory: "256M"
    image: nginx:latest
    restart: on-failure:2
    container_name: frontend-app
    volumes:
      - ./logs/frontend/:/var/log/nginx/
      - ./nginx/frontend-app/conf.d/:/etc/nginx/conf.d/
      - ./www/frontend/:/var/www/frontend/
    ports:
      - "3000:80"
    networks:
      - internal-network  # Solo rete interna
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  database:
    container_name: db-app
    image: mysql:latest
    restart: on-failure:2
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: backend
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      DB_HOST: db-app
      DB_PORT: 3306
      DB_DATABASE: backend
      DB_USERNAME: root
      DB_PASSWORD: password
    volumes:
      - ./database/mysql:/var/lib/mysql
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u root -ppassword || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - internal-network


networks:
  external-network:
    driver: bridge
  internal-network: # Solo per comunicazione tra container interni
    driver: bridge
    internal: true
